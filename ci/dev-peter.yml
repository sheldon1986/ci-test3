resources:

  - name: dev-peter
    type: git
    source:
      uri: git@github.com:sheldon1986/ci-test3.git
      branch: dev-peter
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: repo-stg
    type: git
    source:
      uri: git@github.com:sheldon1986/ci-test3.git
      branch: staging
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: repo-master
    type: git
    source:
      uri: git@github.com:sheldon1986/ci-test3.git
      branch: master
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: cf-prod
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org-prod}}
      space: {{cf-space-prod}}
      skip_cert_check: true

  - name: cf-staging
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org-stg}}
      space: {{cf-space-staging}}
      skip_cert_check: true

  - name: cf-dev
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org-dev}}
      space: {{cf-space-dev}}
      skip_cert_check: true
  - name: m2
    type: docker-image
    source:
      repository: making/m2

jobs:
  - name: test-develop
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: dev-peter
          trigger: true
        - get: m2
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: deploy-develop
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: dev-peter
          passed: [ test-develop ]
          trigger: true
      - task: build
        file: repo/ci/tasks/build.yml
      - put: cf-dev
        params:
          manifest: repo/manifest-dev.yml
          path: output/demo.jar
          current_app_name: dev-peter

  - name: pass-dev
    plan:
      - aggregate:
              #        - get: repo
              #          resource: dev-peterelop
        - get: cf-dev
          passed: [ deploy-develop ]
          trigger: false
          #        - get: repo
          #          resource: repo-stg
        - get: dev-peter

  - name: merge-dev-to-staging
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-stg
        - get: dev-peter
          passed: [ pass-dev ]
          trigger: true
      - task: merge-stg-to-master
        file: repo/ci/tasks/dev-peter.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-stg
        params:
          repository: out

  - name: test-stg
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-stg
          passed: [ merge-dev-to-staging ]
          trigger: true
        - get: m2
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: deploy-staging
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-stg
          passed: [ test-stg ]
          trigger: true
      - task: build
        file: repo/ci/tasks/build.yml
      - put: cf-staging
        params:
          manifest: repo/manifest-staging.yml
          path: output/demo.jar
          current_app_name: concourse-ci-demo-stg

  - name: pass-stg
    plan:
      - aggregate:
        - get: repo
          resource: repo-stg
        - get: cf-staging
          passed: [ deploy-staging ]
          trigger: false

  - name: merge-release-to-master
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-master
        - get: repo-stg
          passed: [ pass-stg ]
          trigger: true
      - task: merge-release-to-master
        file: repo/ci/tasks/merge-release-branch.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-master
        params:
          repository: out

  - name: test-master
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-master
          passed: [ merge-release-to-master ]
          trigger: true
        - get: m2
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: deploy-prod
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-master
          passed: [ test-master ]
          trigger: true
      - task: build
        file: repo/ci/tasks/build.yml
      - put: cf-prod
        params:
          manifest: repo/manifest.yml
          path: output/demo.jar
          current_app_name: concourse-ci-demo
